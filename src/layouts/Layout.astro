---
import { Toaster } from '../components/ui/toaster';
import { ThemeToggle } from '../components/ThemeToggle';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div id="theme-root">
			<header class="bg-blue-950 dark:bg-blue-900 text-white p-4 flex justify-between items-center">
				<h1 class="text-2xl font-bold">{title}</h1>
				<ThemeToggle client:load />
			</header>
			<main class="flex-grow bg-blue-100 dark:bg-blue-950 min-h-screen">
				<slot />
			</main>
			<Toaster client:load />
		</div>

		<script>
			function setTheme(theme) {
				localStorage.setItem('theme', theme);
				document.documentElement.classList.toggle('dark', theme === 'dark');
			}

			function getInitialTheme() {
				const savedTheme = localStorage.getItem('theme');
				return savedTheme || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
			}

			document.addEventListener('DOMContentLoaded', () => {
				const initialTheme = getInitialTheme();
				setTheme(initialTheme);

				window.toggleTheme = () => {
					const currentTheme = localStorage.getItem('theme') || 'light';
					const newTheme = currentTheme === 'light' ? 'dark' : 'light';
					setTheme(newTheme);
				};
			});
		</script>
	</body>
</html>
